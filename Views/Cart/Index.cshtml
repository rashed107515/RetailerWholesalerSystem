@model RetailerWholesalerSystem.Models.CartViewModel
@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <h2>Your Shopping Cart</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (Model.CartGroups.Count == 0)
    {
        <div class="alert alert-info">
            Your cart is empty. <a asp-controller="Product" asp-action="Index">Continue shopping</a>
        </div>
    }
    else
    {
        <div class="mb-3">
            <form asp-action="Checkout" method="get" id="checkout-form">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-cart-check"></i> Checkout (@Model.CartGroups.Count order(s), Total: @Model.TotalAmount.ToString("C"))
                </button>
            </form>
        </div>

        @foreach (var group in Model.CartGroups)
        {
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5>Wholesaler: @group.WholesalerName</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in group.Items)
                                {
                                    <tr data-cart-item-id="@item.CartItemID">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.WholesalerProduct.Product.ImageURL))
                                                {
                                                    <img src="@item.WholesalerProduct.Product.ImageURL" alt="@item.WholesalerProduct.Product.Name" class="img-thumbnail me-2" style="max-width: 50px;">
                                                }
                                                else
                                                {
                                                    <div class="bg-light me-2 d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                                        <i class="bi bi-image text-muted"></i>
                                                    </div>
                                                }
                                                <div>
                                                    <h6 class="mb-0">@item.WholesalerProduct.Product.Name</h6>
                                                    <small class="text-muted">Min Order: @item.WholesalerProduct.MinimumOrderQuantity</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@item.WholesalerProduct.Price.ToString("C")</td>
                                        <td width="150">
                                            <div class="input-group">
                                                <button type="button" class="btn btn-outline-secondary btn-sm quantity-decrement">-</button>
                                                <input type="number" class="form-control quantity-input"
                                                       value="@item.Quantity"
                                                       min="@item.WholesalerProduct.MinimumOrderQuantity"
                                                       max="@item.WholesalerProduct.AvailableQuantity"
                                                       data-cart-item-id="@item.CartItemID">
                                                <button type="button" class="btn btn-outline-secondary btn-sm quantity-increment">+</button>
                                            </div>
                                        </td>
                                        <td class="item-total">@((item.Quantity * item.WholesalerProduct.Price).ToString("C"))</td>
                                        <td>
                                            <button type="button" class="btn btn-danger btn-sm remove-from-cart" data-cart-item-id="@item.CartItemID">
                                                <i class="bi bi-trash"></i> Remove
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="3" class="text-end">Subtotal:</th>
                                    <th>@group.SubTotal.ToString("C")</th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        }

        <div class="card mb-4">
            <div class="card-header bg-success text-white">
                <h5>Order Summary</h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <h5>Total</h5>
                    <h5>@Model.TotalAmount.ToString("C")</h5>
                </div>
                <div class="d-grid gap-2 mt-3">
                    <button type="button" class="btn btn-primary" onclick="document.getElementById('checkout-form').submit();">
                        <i class="bi bi-credit-card"></i> Proceed to Checkout
                    </button>
                    <a asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Continue Shopping
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Function to update quantity
            function updateQuantity(cartItemId, quantity) {
                $.ajax({
                    url: '@Url.Action("UpdateQuantity")',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        quantity: quantity,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            // Update item total
                            $(`tr[data-cart-item-id="${cartItemId}"] .item-total`).text(response.formattedItemTotal);

                            // Refresh the page to update all totals
                            // For a better UX, you could update subtotals and grand total via JS instead
                            location.reload();
                        } else {
                            alert(response.message);
                            // Reset the quantity to previous value
                            location.reload();
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating the cart.');
                        location.reload();
                    }
                });
            }

            // Quantity increment button
            $('.quantity-increment').click(function () {
                var input = $(this).siblings('.quantity-input');
                var currentValue = parseInt(input.val());
                var max = parseInt(input.attr('max'));

                if (currentValue < max) {
                    input.val(currentValue + 1);
                    var cartItemId = input.data('cart-item-id');
                    updateQuantity(cartItemId, currentValue + 1);
                }
            });

            // Quantity decrement button
            $('.quantity-decrement').click(function () {
                var input = $(this).siblings('.quantity-input');
                var currentValue = parseInt(input.val());
                var min = parseInt(input.attr('min'));

                if (currentValue > min) {
                    input.val(currentValue - 1);
                    var cartItemId = input.data('cart-item-id');
                    updateQuantity(cartItemId, currentValue - 1);
                }
            });

            // Quantity input change
            $('.quantity-input').change(function () {
                var input = $(this);
                var cartItemId = input.data('cart-item-id');
                var quantity = parseInt(input.val());
                var min = parseInt(input.attr('min'));
                var max = parseInt(input.attr('max'));

                // Validate input
                if (quantity < min) {
                    input.val(min);
                    quantity = min;
                } else if (quantity > max) {
                    input.val(max);
                    quantity = max;
                }

                updateQuantity(cartItemId, quantity);
            });

            // Remove item from cart
            $('.remove-from-cart').click(function () {
                var cartItemId = $(this).data('cart-item-id');
                if (confirm('Are you sure you want to remove this item from your cart?')) {
                    $.ajax({
                        url: '@Url.Action("RemoveItem")',
                        type: 'POST',
                        data: {
                            cartItemId: cartItemId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('An error occurred while removing the item.');
                        }
                    });
                }
            });
        });
    </script>
}